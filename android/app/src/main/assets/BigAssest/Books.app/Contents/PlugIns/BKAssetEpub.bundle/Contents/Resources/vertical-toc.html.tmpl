<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
	<head>
		<style type="text/css">
/* OK, establish some ground rules. */

html {
    /*overflow-y: hidden;*/
    background: {{.backgroundColor}};
}

body {
    margin: 0;
}

.setupWritingMode {
    -epub-writing-mode: vertical-rl;
    height: 100%;
}

nav, nav li {
    margin: 0;
}

/* List item formatting */
nav li {
    padding-left: 12px;
    padding-right: 12px;
    position: relative;
    display: flex;
    align-items: center; /* Center align the title and page number */
}

nav li.indentation1, nav li.indentation2 {
    background: {{.indentedRowBackgroundColor}};
}

li.indentation0 + li.indentation1, li.indentation0 + li.indentation2 {
    border-right: 1px solid {{.rowBorderColor}};
}

li.indentation1 + li.indentation0, li.indentation2 + li.indentation0 {
    border-right: 1px solid {{.rowBorderColor}};
}

nav ol {
    list-style: none;
    margin: 0;
    -webkit-padding-start: 0;
}

/* Text formatting */
html, body, section, nav, ol, div, p,
  li, span, a, a:link, a:visited, ruby, rt, rp {
    text-decoration: none;
    font-weight: normal;
    font-family: {{.chapterTopLevelFontFamily}};
}

html, body, section, nav, ol, div, p,
  li, a, a:link, a:visited {
    color: {{.defaultTextColor}};
    line-height: 17px;
    font-size: {{.chapterTopLevelFontSize}};
}

nav li.indentation1, nav li.indentation1 p, nav li.indentation1 span, nav li.indentation1 a, nav li.indentation1 ruby, nav li.indentation1 rt, nav li.indentation1 rp,
  nav li.indentation2, nav li.indentation2 p, nav li.indentation2 span, nav li.indentation2 a, nav li.indentation2 ruby, nav li.indentation2 rt, nav li.indentation2 rp {
    font-family: {{.chapterSubLevelFontFamily}};
}

nav li.indentation1, nav li.indentation1 p, nav li.indentation1 a
  nav li.indentation2, nav li.indentation2 p, nav li.indentation2 a {
    font-size: {{.chapterSubLevelFontSize}};
}

.-ibooks-toc-page-title
{
    flex: 1;
    -webkit-padding-end: 20px;
}

/* Page numbers */
div.-ibooks-toc-page-number {
    flex: none;
    -epub-writing-mode: horizontal-tb;
    line-height: 13px;
    text-align: center;
    cursor: default;
}

div.-ibooks-toc-page-number span.-ibooks-toc-page-number {
    font-family: "HelveticaNeue", Helvetica, sans-serif;
    font-size: 13px;
    color: {{.pageNumberColor}};
}


/* Blue inital selection, blue active row */
a:active,
  a:active span,
  a:active + div.-ibooks-toc-page-number span.-ibooks-toc-page-number,
  li.selectedNode a,
  li.selectedNode a span,
  li.selectedNode div.-ibooks-toc-page-number span.-ibooks-toc-page-number {
  color: {{.textHighlightColor}};
}

/* Page doesn't exist?  Look disabled */
li.notPageExists,
li.notPageExists a,
  li.notPageExists a:active,
  li.notPageExists a span,
  li.notPageExists a:active span {
  color: {{.textNotPageExistsColor}};
}


nav ol li.indentation0 {
    -webkit-padding-start: 20px;
    -webkit-padding-end:   20px;
}

nav ol li.indentation1 {
    -webkit-padding-start: 42px;
    -webkit-padding-end:   20px;
}

nav ol li.indentation2 {
    -webkit-padding-start: 75px;
    -webkit-padding-end:   20px;
}


/* we do not want the user to be able to select text!*/
*{
    -webkit-user-select: none;
}

/* we only want the default arrow cursor. Not the hand cursor!*/
a {
  cursor:default;
}

img {
	width: 1em; /* In a vertical TOC, width becomes the "height" of the image relative to the text. */
    filter: {{.imgFilter}};
}

{{.idCssRules}}

		</style>
        <script type="text/javascript">
            //<![CDATA[
            function updatePageNumberStrings(PNs)
            {
                var PNSpans = document.querySelectorAll("div.-ibooks-toc-page-number span.-ibooks-toc-page-number");
                for (var i = 0; i < PNSpans.length; i++)
                {
                    PNSpans[i].innerText = "" + PNs[i];
                };
            }
            
            function selectLink(href)
            {
                var chapters = document.chapters;
                var anchors = document.querySelectorAll("nav ol li a");
                for (var j = 0; j < anchors.length; j++)
                {
                    var anchor = anchors[j];
                    var listItem = anchors[j].parentNode;
                    var extraClass = (anchor.getAttribute("href") == href) ? " selectedNode" : "";
                    listItem.className = chapters[j]["class"] + extraClass;
                }
            }
            
            function clearSelectedLink()
            {
                var chapters = document.chapters;
                var listItems = document.querySelectorAll("nav ol li");
                for (var j = 0; j < listItems.length; j++)
                {
                    var listItem = listItems[j];
                    listItem.className = chapters[j]["class"];
                };
            }

            function setupTOCWithChapters(chapters)
            {
                document.chapters = chapters;
                
                BKDOMCleanup._hoistWritingMode(false);
                BKDOMCleanup._forceStyleRecalc();
            }

            function triggerLink(href)
            {
                document.location = href;
            }

            //]]>
        </script>
	</head>
	<body>
        <div class="setupWritingMode">
        <nav type="epub:toc">
        <ol>
{{range chapters}}
  <li class="{{.class}}" id="{{.id}}" onclick="triggerLink('{{.href}}')" onmousedown="selectLink('{{.href}}')" onmouseup="clearSelectedLink()"><a class="-ibooks-toc-page-title" href="{{.href}}">{{.title}}</a><div class="-ibooks-toc-page-number"><span class="-ibooks-toc-page-number">{{.pageNumber}}</span></div></li>
{{end range chapters}}
        </ol>
        </nav>
        </div>
	</body>
</html>
